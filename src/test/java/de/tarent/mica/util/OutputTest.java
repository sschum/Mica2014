package de.tarent.mica.util;

import static org.junit.Assert.*;

import org.junit.Test;

import de.tarent.mica.model.Field;
import de.tarent.mica.model.World;

public class OutputTest {

	@Test
	public void makeSideBySide_equalRowCount(){
		World world = new World(5, 5);
		
		assertEquals(
				"  0 1 2 3 4 |   0 1 2 3 4\n" +
				"0 ~ ~ ~ ~ ~ | 0 ? ? ? ? ?\n" +
				"1 ~ ~ ~ ~ ~ | 1 ? ? ? ? ?\n" +
				"2 ~ ~ ~ ~ ~ | 2 ? ? ? ? ?\n" +
				"3 ~ ~ ~ ~ ~ | 3 ? ? ? ? ?\n" +
				"4 ~ ~ ~ ~ ~ | 4 ? ? ? ? ?\n",
				Output.makeSideBySide(world.getOwnField().toString(), world.getEnemyField().toString(), " | "));
	}
	
	@Test
	public void makeSideBySide_differentRowCount(){
		Field field1 = new Field(5, 5);
		Field field2 = new Field(6, 6);
		
		assertEquals(
				"  0 1 2 3 4 |   0 1 2 3 4 5\n" +
				"0 ? ? ? ? ? | 0 ? ? ? ? ? ?\n" +
				"1 ? ? ? ? ? | 1 ? ? ? ? ? ?\n" +
				"2 ? ? ? ? ? | 2 ? ? ? ? ? ?\n" +
				"3 ? ? ? ? ? | 3 ? ? ? ? ? ?\n" +
				"4 ? ? ? ? ? | 4 ? ? ? ? ? ?\n" +
				"            | 5 ? ? ? ? ? ?\n",
				Output.makeSideBySide(field1.toString(), field2.toString(), " | "));
		
		assertEquals(
				"  0 1 2 3 4 5 |   0 1 2 3 4\n" +
				"0 ? ? ? ? ? ? | 0 ? ? ? ? ?\n" +
				"1 ? ? ? ? ? ? | 1 ? ? ? ? ?\n" +
				"2 ? ? ? ? ? ? | 2 ? ? ? ? ?\n" +
				"3 ? ? ? ? ? ? | 3 ? ? ? ? ?\n" +
				"4 ? ? ? ? ? ? | 4 ? ? ? ? ?\n" +
				"5 ? ? ? ? ? ? |            \n",
				Output.makeSideBySide(field2.toString(), field1.toString(), " | "));
	}
	
	@Test
	public void makeSideBySide_differentCharCount(){
		Field field1 = new Field(5, 5);
		Field field2 = new Field(6, 6);
		
		assertEquals(
				"=>          | \n" +
				"  0 1 2 3 4 |   0 1 2 3 4 5\n" +
				"0 ? ? ? ? ? | 0 ? ? ? ? ? ?\n" +
				"1 ? ? ? ? ? | 1 ? ? ? ? ? ?\n" +
				"2 ? ? ? ? ? | 2 ? ? ? ? ? ?\n" +
				"3 ? ? ? ? ? | 3 ? ? ? ? ? ?\n" +
				"4 ? ? ? ? ? | 4 ? ? ? ? ? ?\n" +
				"            | 5 ? ? ? ? ? ?\n",
				Output.makeSideBySide("=>\n" + field1.toString(), "\n" + field2.toString(), " | "));
		
		assertEquals(
				"  0 1 2 3 4 5 |   0 1 2 3 4\n" +
				"0 ? ? ? ? ? ? | 0 ? ? ? ? ?\n" +
				"1 ? ? ? ? ? ? | 1 ? ? ? ? ?\n" +
				"2 ? ? ? ? ? ? | 2 ? ? ? ? ?\n" +
				"3 ? ? ? ? ? ? | 3 ? ? ? ? ?\n" +
				"4 ? ? ? ? ? ? | 4 ? ? ? ? ?\n" +
				"5 ? ? ? ? ? ? |            \n",
				Output.makeSideBySide(field2.toString(), field1.toString(), " | "));
	}
	
	@Test
	public void makeSideBySide_multiColumns(){
		World world = new World(5, 5);
		
		assertEquals(
				"  0 1 2 3 4 |   0 1 2 3 4 |   0 1 2 3 4\n" +
				"0 ~ ~ ~ ~ ~ | 0 ? ? ? ? ? | 0 ? ? ? ? ?\n" +
				"1 ~ ~ ~ ~ ~ | 1 ? ? ? ? ? | 1 ? ? ? ? ?\n" +
				"2 ~ ~ ~ ~ ~ | 2 ? ? ? ? ? | 2 ? ? ? ? ?\n" +
				"3 ~ ~ ~ ~ ~ | 3 ? ? ? ? ? | 3 ? ? ? ? ?\n" +
				"4 ~ ~ ~ ~ ~ | 4 ? ? ? ? ? | 4 ? ? ? ? ?\n",
				Output.makeSideBySide(" | ", world.getOwnField().toString(), world.getEnemyField().toString(), world.getEnemyField().toString()));
	}
}
